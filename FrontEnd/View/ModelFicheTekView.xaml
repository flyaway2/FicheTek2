<views:MvxWindow x:Class="FrontEnd.View.ModelFicheTekView"
                 xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:local="clr-namespace:FrontEnd.View"
                 xmlns:view="clr-namespace:FrontEnd.View"
                 mc:Ignorable="d"
                 ResizeMode="NoResize"
                 Loaded="ModelFicheTekView_OnLoaded"
                 WindowStartupLocation="CenterScreen"
                 xmlns:CustClass="clr-namespace:FrontEnd.CustomClass"
                 Title="Fiche Technique Model" Height="300" Width="300">
   
        <views:MvxWindow.Resources>
	     <Style x:Key="SwitchTypeToggleButton"
       TargetType="{x:Type ToggleButton}">

    <Style.Resources>
        <Color x:Key="Color.Additional.LightGrey">#989EA8</Color>
        <Color x:Key="Color.Additional.MediumGrey">#61656B</Color>
        <Color x:Key="Color.MedtronicBranding.MedtronicBlue">#004B87</Color>
        <Color x:Key="Color.MedtronicBranding.CobaltBlue">#0085CA</Color>

        <Style x:Key="ToggleButtonContentTextbox"
               TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
        </Style>
        <SolidColorBrush x:Key="ToggleButtonFalseBackground"
                         Color="{StaticResource Color.Additional.LightGrey}" />
        <SolidColorBrush x:Key="ToggleButtonTrueBackground"
                         Color="{StaticResource Color.MedtronicBranding.CobaltBlue}" />
        <SolidColorBrush x:Key="ToggleButtonFalseForeground"
                         Color="{StaticResource Color.Additional.MediumGrey}" />
        <SolidColorBrush x:Key="ToggleButtonTrueForeground"
                         Color="{StaticResource Color.MedtronicBranding.MedtronicBlue}" />
        <TextBlock x:Key="OffContent"
                   Style="{StaticResource ToggleButtonContentTextbox}"
                   Text="Off" />
        <Style x:Key="OnContentControl"
               TargetType="ContentControl">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock FontFamily="Wingdings 2"
                                   FontSize="24"
                                   FontWeight="Bold"
                                   Foreground="White"
                                   Style="{StaticResource ToggleButtonContentTextbox}"
                                   Text="P" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style x:Key="OffContentControl"
               TargetType="ContentControl">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <TextBlock FontSize="24"
                                   Foreground="White"
                                   Style="{StaticResource ToggleButtonContentTextbox}"
                                   Text="X" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

    </Style.Resources>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
                <Grid x:Name="MainRow">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding ElementName=TopRow,
                        Path=ActualHeight}" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="{Binding ElementName=TopRow,
                        Path=ActualHeight}" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="TopRow" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Ellipse x:Name="BackgroundEllipse1"
                                 Grid.RowSpan="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}"
                                 Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}"
                                 HorizontalAlignment="Left"
                                 Fill="{StaticResource ToggleButtonTrueBackground}" />
                        <Ellipse x:Name="BackgroundEllipse2"
                                 Grid.Row="0"
                                 Grid.RowSpan="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}"
                                 Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}"
                                 HorizontalAlignment="Right"
                                 Fill="{StaticResource ToggleButtonFalseBackground}" />
                        <Border x:Name="BackgroundBorder"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Background="{StaticResource ToggleButtonTrueBackground}" />
                    </Grid>
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="AnimationWidth" />
                            <ColumnDefinition Width="{Binding ElementName=MainRow,
                        Path=ActualHeight}" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="AnimationSizeBorder"
                                Grid.Column="0" />
                        <ContentControl Grid.Column="0"
                                        Style="{StaticResource OnContentControl}" />
                     </Grid>
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding ElementName=MainRow,
                Path=ActualHeight}" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <ContentControl Grid.Column="1"
                                        Style="{StaticResource OffContentControl}" />
                    </Grid>
                    <Grid Background="Transparent">
                        <StackPanel HorizontalAlignment="Left"
                                    Orientation="Horizontal">
                            <Border Width="{Binding ElementName=AnimationSizeBorder,
                Path=ActualWidth}" />
                            <Ellipse x:Name="ForegroundEllipse"
                                     Width="{Binding ElementName=MainRow,
                                                     Path=ActualHeight}"
                                     Height="{Binding ElementName=MainRow,
                                                      Path=ActualHeight}"
                                     HorizontalAlignment="Right"
                                     Fill="{StaticResource ToggleButtonTrueForeground}" />
                        </StackPanel>
                    </Grid>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsChecked" Value="False">
                        <Setter TargetName="BackgroundBorder" Property="Background"
                Value="{StaticResource ToggleButtonFalseBackground}" />
                        <Setter TargetName="ForegroundEllipse" Property="Fill"
                Value="{StaticResource ToggleButtonFalseForeground}" />
                        <!--<Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName
                        ="AnimationSizeBorder"
                        Storyboard.TargetProperty="(Border.Width)"
                        To="0" Duration="0:0:3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>

                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName=
                        "AnimationSizeBorder"
                        Storyboard.TargetProperty="(Border.Width)"
                        From="0" Duration="0:0:3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>-->
                        <Setter TargetName="AnimationSizeBorder" Property="Width" Value="0" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
    <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel Orientation="Horizontal">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border x:Name="on" Width="25" Height="25" Background="LightGray" CornerRadius="2,0,0,4" Margin="10,0,0,0">
                            <TextBlock x:Name="onText" Text="On" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Border x:Name="off" Width="25" Height="25" Background="LightGray" CornerRadius="0,2,4,0">
                            <TextBlock x:Name="offText" Text="Off" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="on" Property="Background" Value="LightBlue"/>
                            <Setter TargetName="onText" Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="off" Property="Background" Value="LightBlue"/>
                            <Setter TargetName="offText" Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	        <Style x:Key="Btn" TargetType="{x:Type CustClass:GitHubButton}">
		<Setter Property="UseLayoutRounding" Value="True"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Foreground" Value="#FFFFFF"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="Margin" Value="2"/>
        <Setter Property="Height" Value="25"/>
		<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CustClass:GitHubButton}">
					<ControlTemplate.Resources>
						<Style TargetType="{x:Type Border}" x:Key="IN.BORDER">
							<Setter Property="BorderBrush" Value="#24a0ed"/>
							<Setter Property="BorderThickness" Value="1 1 1 1"/>
							<Setter Property="Background" Value="#24a0ed"/>
							<Setter Property="CornerRadius" Value="5"/>
						</Style>
						<Style TargetType="{x:Type StackPanel}" x:Key="IN.PANEL">
							<Setter Property="VerticalAlignment" Value="Center"/>
							<Setter Property="HorizontalAlignment" Value="Center"/>
							<Setter Property="Orientation" Value="Horizontal"/>
						</Style>
						<Style TargetType="{x:Type ContentPresenter}" x:Key="IN.CONTENT">
							<Setter Property="VerticalAlignment" Value="Center"/>
							<Setter Property="Margin" Value="0 4 2 4"/>
						</Style>
						
						
					</ControlTemplate.Resources>
                    <Border x:Name="border" Style="{StaticResource IN.BORDER}">
						<StackPanel Style="{StaticResource IN.PANEL}">
							<ContentPresenter Style="{StaticResource IN.CONTENT}"/>
						</StackPanel>
					</Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#084469"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#084469"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	        <Style  TargetType="{x:Type ToggleButton}">

		        <Setter Property="Template">

			        <Setter.Value>

				        <ControlTemplate TargetType="{x:Type ToggleButton}">

					        <Border  x:Name="border"
					                 BorderBrush="{TemplateBinding BorderBrush}"
					                 BorderThickness="{TemplateBinding BorderThickness}"
					                 Background="{TemplateBinding Background}"
					                 SnapsToDevicePixels="True">
						        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>

					        </Border>

					        <ControlTemplate.Triggers>

						        <Trigger Property="IsMouseOver" Value="true">

							        <Setter Property="Background"
							                TargetName="border"
							                Value="SteelBlue"/>

							        <Setter Property="BorderBrush"
							                TargetName="border"
							                Value="SteelBlue"/>

						        </Trigger>

						        <Trigger Property="IsChecked" Value="true">

							        <Setter Property="Background"
							                TargetName="border"
							                Value="SteelBlue"/>

							        <Setter Property="BorderBrush"
							                TargetName="border"
							                Value="SteelBlue"/>

						        </Trigger>
                            
					        </ControlTemplate.Triggers>
                        
				        </ControlTemplate>
                    
			        </Setter.Value>
                
		        </Setter>
            
	        </Style>
        </views:MvxWindow.Resources>
    <Grid Background="#B6D0E2">
        <Grid.RowDefinitions>
            <RowDefinition Height="0.5*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
	        <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="1*"></RowDefinition>
            <RowDefinition Height="0.5*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.5*"></ColumnDefinition>
            <ColumnDefinition Width="2*"></ColumnDefinition>
            <ColumnDefinition Width="0.5*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
	    
       <Border  Grid.Column="1" Grid.Row="1" BorderThickness="1" >
          <Border.Style>
              <Style TargetType="Border">
                  <Setter Property="BorderBrush" Value="Gray">
                          
                  </Setter>
                  <Style.Triggers>
                      <DataTrigger Binding="{Binding ElementName=TgBtn,Path=IsChecked}" Value="True">
                          <Setter Property="BorderBrush" Value="Green"></Setter>
                          <Setter Property="Background" Value="MediumSeaGreen"></Setter>
                      </DataTrigger>
                  </Style.Triggers>    
              </Style>
          </Border.Style>
           <StackPanel   HorizontalAlignment="Center"  Orientation="Horizontal" >
               <ToggleButton Width="60"
                             Height="35"
                             Cursor="Hand"
                             x:Name="TgBtn"
                             IsChecked="{Binding IsEchantillon}"
                             Grid.Row="1" Grid.Column="1"
                             Style="{StaticResource SwitchTypeToggleButton}" />

               <TextBlock IsEnabled="{Binding ElementName=TgBtn,Path=IsChecked}" Margin="5 0 0 0" VerticalAlignment="Center"  FontFamily="arial" FontWeight="Bold" FontSize="18" Text="Echantillon">
                   <TextBlock.Style>
                       <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="Gray">
                          
                        </Setter>
                           <Style.Triggers>
                               <Trigger Property="TextBlock.IsEnabled" Value="True">
                                   <Setter Property="Foreground" Value="Green"></Setter>
                               </Trigger>
                           </Style.Triggers>    
                       </Style>
                   </TextBlock.Style>
               </TextBlock>
           </StackPanel>
       </Border>
        
        <RadioButton Cursor="Hand"  Command="{Binding EhcCmd}" Grid.Column="1" Grid.Row="2" Height="30" Content="Fiche Technique E.H.C" Style="{StaticResource {x:Type ToggleButton}}" >
            </RadioButton>
        
        <RadioButton Cursor="Hand" Command="{Binding CorchetCmd}" Grid.Column="1" Grid.Row="3" Height="30" Content="Fiche Technique Elastique" Style="{StaticResource {x:Type ToggleButton}}" >
        </RadioButton>
        
        <RadioButton Cursor="Hand" Command="{Binding NormaleCmd}" Grid.Column="1" Grid.Row="4" Height="30" Content="Fiche Technique Normale" Style="{StaticResource {x:Type ToggleButton}}" >
        </RadioButton>
        
        <DockPanel Height="30" Grid.Row="5" Grid.Column="1" LastChildFill="False">
            <CustClass:GitHubButton Cursor="Hand" Command="{Binding AnnulerCmd}" Style="{StaticResource Btn}" DockPanel.Dock="Left" Width="80">Annuler</CustClass:GitHubButton>
            <CustClass:GitHubButton Cursor="Hand" Command="{Binding ValiderCmd}" DockPanel.Dock="Right" Width="80" Style="{StaticResource Btn}">Valider</CustClass:GitHubButton>
        </DockPanel>
    </Grid>
</views:MvxWindow>
